# Practicalli dotfiles Git Configuration
#
# Adjust paths if not saved in `~/.config/git/`

# --- Conditional Configuration
# Uses relative file path to this configuration file
# [include]:gitdir for file paths
# [include]:onbranch for a particular branch 
# [include]:hasconfig:remote.*.url for a different remote domain, e.g. github & gitlab

# Default personal identity configuration
[include]
		path = config-johnny

# Practicalli community work
[includeIf "gitdir:**/practicalli/"]
		path = config-practicalli

# Commercial work 
[includeIf "gitdir:**/griffin/"]
		path = config-griffin


# --- Common Git Behaviour

[init]
	# scripts and hooks to add when creating a new local Git repository
	# templateDir = ~/.config/git/repo-template/

	# default branch name when creating a new local repository
	defaultBranch = main

[core]
	# Set which editor to use for editing commit messages (when not included with -m)
	# VISUAL or EDITOR environment variables also set the choice of editor
	# vi used if not set.  Typical examples are nvim or emacsclient
	editor = astronvim

	# file and directory patterns to ignore across all projects
	excludesfile = ~/.config/git/ignore

	# Tool to page through long output (e.g. git log). `less` is default
	# pager = less

	# Ensure Linux & MacOSX line endings in checked out text files
	autocrlf = input

[fetch]
	# Remove deleted remote branches from local repository
	prune = true

[push]
	# Set local brach to track new remote branch automatically, Git 2.37.0 onward
	autoSetupRemote = true

[log]
	abbrevCommit = true

# --- Diff & Merge

[diff]
  tool = nvimdiff

[merge]
	# Include common parent when merge conflicts arise
	conflictstyle = diff3

# Using meld external visual diff tool
# [difftool "meld"]
# 				cmd = meld \"$LOCAL\" \"$REMOTE\"
# 				path =
#
# [mergetool "meld"]
# 				cmd = meld \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
# 				trustExitCode = true


# --- Git commands 

# command line shot cuts
[alias]
	branches = branch -av
	tags = tag -l
	lg = log --graph --decorate --relative-date --oneline
	lp = log --graph --pretty=format:'%C(cyan)%h%Creset - %C(bold yellow)%d%Creset %s %C(blue)(%ar) %C(magenta)%an%Creset' --all
	sitrep = status -sb
	sr = status -sb
	word = diff --word-diff
	unstage = reset HEAD
	empty = "git commit --allow-empty"

	# delete locate branches merged into the remote
	delete-local-merged = "!git fetch && git branch --merged | egrep -v 'master' | xargs git branch -d"


# --- Git clone aliases
# e.g `git clone p:repo-name`
# host names defined in ~./ssh/config

# Clone short-cuts
# git clone p:repo-name
[url "git@github.com:practicalli/"]
	insteadOf = p:

# git clone e:repo-name
[url "git@engineering:practicalli/"]
	insteadOf = e:

[url "git@griffin:griffinbank/"]
	insteadOf = g:

[help]
	# Automatically change incorrectly typed commands
	# Set timeout (in 0.1 second steps) before git automatically changes the command
	# autocorrect = 50


# --- Git CLI

[credential "https://github.com"]
	helper = !/usr/bin/gh auth git-credential
[credential "https://gist.github.com"]
	helper = !/usr/bin/gh auth git-credential

